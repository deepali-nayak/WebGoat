# Starter pipeline
# Start with a minimal pipeline that you can customize to build and deploy your code.
# Add steps that build, run tests, deploy, and more:
# https://aka.ms/yaml

trigger:
- develop

pool:
  vmImage: ubuntu-latest

steps:
- script: echo Hello, world!
  displayName: 'Run a one-line script'

- script: |
    echo Add other tasks to build, test, and deploy your project.
    echo See https://aka.ms/yaml
  displayName: 'Run a multi-line script'
- task: Bash@3
  inputs:
    targetType: 'inline'
    script: 'wget https://github.com/ANKIT-KS/WebGoat/archive/refs/heads/develop.zip'
  
- task: Bash@3
  inputs:
    targetType: 'inline'
    script: |
      wget -c https://github.com/fod-dev/fod-uploader-java/releases/download/v5.2.1/FodUpload.jar
      pwd
      ls -lrt
  displayName: 'Download FoD JAR'

 - task: Bash@3
   inputs:
      targetType: 'inline'
     script: |
          java -jar FodUpload.jar -ac $(FOD-API-KEY) $(FOD-SECRET) -rid 114186 -purl "https://emea.fortify.com/" -apiurl "https://api.emea.fortify.com/" -z develop.zip -ep 2 -rp 2 -pp 1 -apf -I 1
                 status=$?
                 echo $status
  displayName: 'FOD Code SCAN'

- task: Bash@3
  inputs:
    targetType: 'inline'
    script: |
      auth=$(curl -X POST --header 'Content-Type: application/x-www-form-urlencoded' --header 'Connection: close' -d 'grant_type=client_credentials&scope=api-tenant&client_id=$(FOD-API-KEY)&client_secret=$(FOD-SECRET)' 'https://api.emea.fortify.com/oauth/token')
             tok3n=$( echo "$auth" | jq '.["access_token"]' )
             tok3n="${tok3n:1:-1}"
             releasedetails=$(curl -X GET --header 'Accept: application/json' --header 'Authorization: Bearer '${tok3n} 'https://api.emea.fortify.com/api/v3/releases/'$(RELEASE-ID))
             scanid=$( echo "$releasedetails" | jq .currentStaticScanId )
             applicationname=$( echo "$releasedetails" | jq .applicationName | sed 's/["]//g')
             scanSummary=$(curl -X GET --header 'Accept: application/json' --header 'Authorization: Bearer '${tok3n} 'https://api.emea.fortify.com/api/v3/scans/'${scanid}'/summary')
             CRITICAL=$( echo "$releasedetails" | jq .staticCritical )
             HIGH=$( echo "$releasedetails" | jq .staticHigh )
             SUM=$( echo "$scanSummary" | jq .totalIssues )
             #echo "Total Sum of all vulnerabilities = $SUM"
             echo "Application Name = $applicationname"
             echo "CRITICAL = $CRITICAL"
             echo "HIGH = $HIGH"
             if [ $CRITICAL -gt 5 ]
             then
               echo "##[error]Failing task because number of critical issues are greater than 5"
               echo $applicationname
               #curl -H 'Content-Type: application/json' -d '{"text": "Pipeline had warnings because number of critical issues in FoD SAST are greater than 5 for '$applicationname'"}' $(teams_webhook)
               exit 1
             elif [ $HIGH -gt 10 ]
             then
               echo "##[error]Failing task because number of high issues are greater than 10"
               #curl -H 'Content-Type: application/json' -d '{"text": "Pipeline had warnings because number of high issues in FoD SAST are greater than 10 for '$applicationname'"}' $(teams_webhook)
               #exit 1
             elif [ $SUM -gt 50 ]
             then
               echo "##[error]Failing task because number of total issues are greater than 50"
               #curl -H 'Content-Type: application/json' -d '{"text": "Pipeline had warnings because total number of issues in FoD SAST are greater than 50 for '$applicationname'"}' $(teams_webhook)
               #exit 1
             else
               echo "PASSED"
             fi
  continueOnError: true            
  displayName: 'Security Gating' 

- task: Bash@3
   inputs:
    targetType: 'inline'
     script: |
      auth=$(curl -X POST --header 'Content-Type: application/x-www-form-urlencoded' --header 'Connection: close' -d 'grant_type=client_credentials&scope=api-tenant&client_id=$(FOD-API-KEY)&client_secret=$(FOD-SECRET)' 'https://api.sandbox.fortify.com/oauth/token')
                    tok3n=$( echo "$auth" | jq '.["access_token"]' )
                    tok3n="${tok3n:1:-1}"
                    scan_details=$(curl -X GET --header 'Accept: application/json' --header 'Authorization: Bearer '${tok3n} 'https://api.sandbox.fortify.com/api/v3/releases/9516/dynamic-scans/scan-setup')
                    assessmenttypeID=$( echo "$scan_details" | jq '.assessmentTypeId')
                    entitlementID=$( echo "$scan_details" | jq '.entitlementId')
                    echo $assessmenttypeID
                    echo $entitlementID
                    curl -X POST --header 'Content-Type: application/json' --header 'Accept: application/json' --header 'Authorization: Bearer '${tok3n} -d '{"startDate": "2022-08-29T11:52:08.980Z", "assessmentTypeId": ${assessmenttypeID}, "entitlementId": ${entitlementID}, "entitlementFrequencyType": "SingleScan", "isRemediationScan": false, "isBundledAssessment": false, "parentAssessmentTypeId": 0, "applyPreviousScanSettings": false, "scanMethodType": "IDE", "scanTool": "string", "scanToolVersion": "string"}' 'https://api.sandbox.fortify.com/api/v3/releases/9516/dynamic-scans/start-scan'
